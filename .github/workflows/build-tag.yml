
name: Create tagged release

on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      -
        name: Action Checkout
        uses: actions/checkout@v4
      -
        name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
          cache-dependency-path: ./go.sum
      -
        name: Generate
        run: go generate .
      -
        name: Test
        run: go test -v ./...

  create_release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      # -
      #   name: Action Checkout
      #   uses: actions/checkout@v4
      -
        name: Output TAG
        id: tag
        run: |
          export RELEASE_VERSION="${GITHUB_REF#refs/*/}"
          echo "tag=${RELEASE_VERSION}"
          echo "tag=${RELEASE_VERSION}" >> "$GITHUB_OUTPUT"
  build:
    runs-on: ubuntu-latest
    needs:
      - create_release
      - test
    steps:
      -
        name: Action Checkout
        uses: actions/checkout@v4
      -
        name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
          cache-dependency-path: ./go.sum
      -
        name: Generate
        run: go generate .
      -
        name: Build
        env:
          TAG: ${{ needs.create_release.outputs.tag }}
        run: bash ./scripts/build.sh

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
            name: 'Go-linux'
            path: './output'


  build-windows:
    runs-on: windows-2022
    needs:
      - create_release
    steps:
      -
        name: Action Checkout
        uses: actions/checkout@v4
      -
        name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
          cache-dependency-path: ./go.sum
      -
        name: Generate
        run: go generate .
      -
        name: Test
        run: go test -v ./...
      -
        name: Run build-windows.exe
        env:
          TAG: ${{ needs.create_release.outputs.tag }}
          CODE_SIGN_PFX: ${{ secrets.CODE_SIGN_PFX }}
          CODE_SIGN_PFX_PASSWORD: ${{ secrets.CODE_SIGN_PFX_PASSWORD }}
        run: go run ./scripts/build-windows.go
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
            name: 'GO-windows'
            path: './output'
